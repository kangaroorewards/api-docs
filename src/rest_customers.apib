
# Customers

# Group Customers

## Customer Collection [/customers{?page}]

### Retrieve all customers [GET]

Returns a list of your customers

**Query Parameters**

|Name|Type|Description|
|-----|----|-----------|
|page|integer|`Optional.` Provide this to retrieve the next set of results for your original query. Default value page=1|
|created_at|string|`Optional.` Filter by created date. [See Filtering](#filtering-customers)|
|updated_at|string|`Optional.` Filter by updated date. [See Filtering](#filtering-customers)|
|email|string|`Optional.` Filter by email address. [See Filtering](#filtering-customers)|
|phone|string|`Optional.` Filter by phone number. [See Filtering](#filtering-customers)|
|include|string|Optional. You can optionally request that the response includes other related resources. To do so, specify include=balance in your request.|

> **Include related resources**
> - **balance** - includes customer's balance for business in the response

> **NOTE:** The value of the include or relationships parameter MUST be a comma-separated (",") list of relationship names.

Examples
```
GET /customers HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6ImFmODNk
X-Application-Key: eyXai0XD7SLLzaOeJW
Accept: application/vnd.kangaroorewards.api.v1+json;
Content-Type: application/json
```

Response Body
```json
{
    "data": [
        {
            "id": "11E696103F8FF5EABB02089E01CF89B5",
            "email": "john1@example.com",
            "phone": "5140000001",
            "first_name": "Adam",
            "last_name": "Pappas"
        },
        {
            "id": "11E696103F8FD85CBB02089E01CF89B5",
            "email": "john2@example.com",
            "phone": "5140000002",
            "first_name": "Alain",
            "last_name": "Trepanier"
        }
        . . .
    ],
    "cursor": {
        "count": 100,
        "next": 2,
        "next_uri": "/customers?page=2"
    },
    "meta": {
        "total": 145
    }
}
```

Example with balance
```
GET /customers?include=balance HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6ImFmODNk
X-Application-Key: eyXai0XD7SLLzaOeJW
Accept: application/vnd.kangaroorewards.api.v1+json;
Content-Type: application/json
```

Response Body
```json
{
    "data": [
        {
            "id": "11E696103F8FF5EABB02089E01CF89B5",
            "email": "john1@example.com",
            "phone": "5140000001",
            "first_name": "Adam",
            "last_name": "Pappas",
            "balance": {
                "points": 100,
                "giftcard": 0
            }
        }
        . . .
    ]
}
```

<a name="filtering-customers"></a>

**Filtering**

When submitting a GET request, you can ask it to return only customers that meet specific criteria.
To filter customers, in the query string, specify one or more fields with an operator, followed by a separator (`|`)
and the values for the following:

Fields:
- `created_at` - Filter by created date
- `updated_at` - Filter by updated date
- `email` - Filter by email address
- `phone` - Filter by phone number

Operators:
- `gt` - Greater Than
- `gte` - Greater Than or Equal
- `lt` - Less Than
- `lte` - Less Than or Equal
- `eq` - Equal

Filter Syntax

A single filter uses the form: `field=operator|VALUE`

Each URL query parameter **must be URL encoded**.

Example:
Retrieve all customers that have created date greather than 2017-01-27T14:37:16+0000

`GET /customers?created_at=gt%7C2017-01-27T14%3A37%3A16%2B0000`

Example:
Retrieve all customers that have email address equal to john@example.com

`GET /customers?email=eq%7Cjohn%40example.com`

Example:
Retrieve all customers that have phone number equal to 5141234567

`GET /customers?email=eq%7Cphone=eq%7C5141234567`


+ Request (application/json)

    + Headers

            Authorization: Bearer <access_token>
            X-Application-Key: eyXai0XD7SLLzaOeJW
            Accept: application/vnd.kangaroorewards.api.v1+json;

+ Response 200 (application/json)
    + Attributes
        - data (array[Customer])

## Customer Collection [/customers]

### Create a customer [POST]

Create a customer.

Body parameters
<table class="table">
    <tr class="bg-green">
        <th>Name</th> <th>Type</th> <th>Description</th>
    </tr>
    <tr>
        <td>email</td>
        <td>string</td>
        <td><strong>Required.</strong> Required if no phone number provided</td>
    </tr>
    <tr>
        <td>phone</td>
        <td>string</td>
        <td><strong>Required.</strong> Required if no email provided</td>
    </tr>
    <tr>
        <td>country_code</td>
        <td>string</td>
        <td><strong>Required with phone.</strong> The customer's country, in ISO 3166-1-alpha-2 format.</td>
    </tr>
    <tr>
        <td>first_name</td>
        <td>string</td>
        <td><strong>Optional.</strong> First Name</td>
    </tr>
    <tr>
        <td>last_name</td>
        <td>string</td>
        <td><strong>Optional.</strong> Last Name</td>
    </tr>
    <tr>
        <td>language</td>
        <td>string</td>
        <td><strong>Optional.</strong> Communication language. Possible values <code>en</code> - English, <code>fr</code> - French, <code>es</code> - Spanish </td>
    </tr>
    <tr>
        <td>gender</td>
        <td>string</td>
        <td><strong>Optional.</strong> Possible values <code>male</code>, <code>female</code> </td>
    </tr>
    <tr>
        <td>referral</td>
        <td>object</td>
        <td><strong>Optional.</strong> Referral object </td>
    </tr>
    <tr>
        <td>referral.referral_program_id</td>
        <td>integer</td>
        <td><strong>Required with `referral`.</strong> Referral Program ID </td>
    </tr>
    <tr>
        <td>referral.referrer_id</td>
        <td>string</td>
        <td><strong>Required with `referral`. </strong> Referrer ID (Customer ID) </td>
    </tr>
</table>

Example

```
POST /customers HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6ImFmODNk
X-Application-Key: eyXai0XD7SLLzaOeJW
Accept: application/vnd.kangaroorewards.api.v1+json;
Content-Type: application/json

{ "email" : "john2@example.com", "first_name": "John", "last_name": "Doe" }
```

Respone Body
```
{
    "data": {
        "id": "11e69610410894b2bb02089e01cf89b5",
        "email": "johndoe@example.com",
        "phone": "5140000001",
        "first_name": "John",
        "last_name": "Doe"
    }
}
```

Example. Create a customer from referral. 

>Note: Referral program is required and must be active. <br>
> Referrer id (customer id who referred) is required <br>
> Referral record must not exist <br>

```
POST /customers
{
  "email": "john@example.com",
  "referral": {
    "referral_program_id": 1056,
    "referrer_id": "11eaa697ae8f46bd9df9b42e99312ac8"
  }
}
```

+ Request (application/json)

    + Headers

            Authorization: Bearer <access_token>
            X-Application-Key: eyXai0XD7SLLzaOeJW
            Accept: application/vnd.kangaroorewards.api.v1+json;

    + Attributes (Customer Create)

+ Response 200 (application/json)
    + Attributes
        - data (Customer)

+ Response 400 (application/json)
    + Attributes (Error 400)

+ Response 422 (application/json)
    + Attributes (Error 422)

## Customer Resource [/customers/{id}{?include}]

### Retrieve a customer [GET]

Returns a single customer.

**Path Parameters**
|Name|Type|Description|
|-----|----|-----------|
|customer_id|string|Required. The ID of the customer|

**Query Parameters**
|Name|Type|Description|
|-----|----|-----------|
|include|string|Optional. You can optionally request that the response includes other resources. To do so, specify include=balance in your request.|
|relationships|string|Optional. You can optionally request that the response includes other related resources. To do so, specify relationships=address in your request.|

> **NOTE:** You could also request more information using include or relationships parameter.
>
> Include:
> - **balance** - includes customer's balance for business in the response
> - **tier_level** - includes customer's current tier level in the response
> - **tier_progress** - includes customer's tier progress
> - **tiers** - includes tiers
> - **referral_programs** - includes referral programs and referral link for customer
>
> Relationships:
> - **tier_levels** - includes tier levels in tier resource. Only with include=tiers
> - **user_type** - includes user type resource
> - **address** - includes customer's address in the response

> **NOTE:** The value of the include or relationships parameter MUST be a comma-separated (",") list of relationship names.

Example
```
GET /customers/11e69610400894b2bb02089e01cf89b5?include=balance,tier_level HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6ImFmODNk
X-Application-Key: eyXai0XD7SLLzaOeJW
Accept: application/vnd.kangaroorewards.api.v1+json;
Content-Type: application/json
```

Response Body
```
{
    "data": {
        "id": "11e69610400894b2bb02089e01cf89b5",
        "email": "johndoe@example.com",
        "phone": "5140000001",
        "first_name": "John",
        "last_name": "Doe"
    },
    "included": {
        "balance": {
            "points": 1000,
            "giftcard": 10.00
        },
        "tier_level": {
            "id": 1,
            "name": "Platinum",
            "reach_spend": 2,
            "reach_visits": 2,
            "reach_points": 2
        }
    }
}
```

Example with customer's address in the response
```
GET /customers/11e69610400894b2bb02089e01cf89b5?relationships=address HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6ImFmODNk
X-Application-Key: eyXai0XD7SLLzaOeJW
Accept: application/vnd.kangaroorewards.api.v1+json;
Content-Type: application/json
```

Example: include tier progress and tier level

```
GET /customers/11e69610400894b2bb02089e01cf89b5?include=tier_level,tier_progress,tiers&relationships=tier_levels
```

Where:

`included.tier_level` - the current tier for customer

`included.tiers` - the list of tiers

`included.tier_progress` - the tier progress for customer at the moment

Response Body
```json
{
    "data": {
        "id": "11e69610400894b2bb02089e01cf89b5",
        "email": "johndoe@example.com",
        "phone": "5140000001",
        "first_name": "John",
        "last_name": "Doe"
        ...
    },
    "included": {
        "tier_level": {
        "id": 1,
        "name": "VIP",
        "reach_spend": 0,
        "reach_visits": 0,
        "reach_points": 10
        },
        "tiers": [
            {
                "id": 1,
                "tiers_sequence": [
                    "2"
                ],
                "tiers_relation": 0,
                "reset_type": 2,
                "reset_period_month": 8,
                "base_previous_period": 0,
                "enabled": true,
                "tier_levels": [
                    {
                        "id": 1,
                        "name": "VIP",
                        "reach_spend": 0,
                        "reach_visits": 0,
                        "reach_points": 10
                    },
                    {
                        "id": 2,
                        "name": "Platinum",
                        "reach_spend": 0,
                        "reach_visits": 0,
                        "reach_points": 20
                    }
                ]
            }
        ],
        "tier_progress": {
            "total_amount": null,
            "total_points": 10,
            "total_visits": null,
            "left_amount": null,
            "left_points": 10,
            "left_visits": null,
            "tiers_relation": 0,
            "start_date": "2020-08-01T00:00:00+00:00",
            "end_date": "2022-07-31T23:59:59+00:00",
            "tier_level": "VIP",
            "next_tier_level": "Platinum",
            "tier_progress": 0
        }
    }
}
```


+ Parameters
    + id: `11e696103f8ff5eabb02089e01cf89b5` - The unique ID of the customer.
    + include: balance,tier (optional, enum) - related resources to include in the response

+ Request (application/json)
    + Headers

            Authorization: Bearer <access_token>
            X-Application-Key: eyXai0XD7SLLzaOeJW
            Accept: application/vnd.kangaroorewards.api.v1+json;

+ Response 200 (application/json)
    + Attributes
        - data (Customer)

+ Response 404 (application/json)
    + Attributes (Error 404)


## Customer Resource [/customers/{id}]

### Update a customer [PUT]

Updates the details of an existing customer.

Body parameters
<table class="table">
    <tr class="bg-warning">
        <th>Name</th> <th>Type</th> <th>Description</th>
    </tr>
    <tr>
        <td>email</td>
        <td>string</td>
        <td><strong>Optional.</strong> The customer's email address.</td>
    </tr>
    <tr>
        <td>phone</td>
        <td>string</td>
        <td><strong>Optional.</strong> The customer's phone number.</td>
    </tr>
    <tr>
        <td>country_code</td>
        <td>string</td>
        <td><strong>Optional.</strong> Required only if phone number supplied. The customer's country, in ISO 3166-1-alpha-2 format.</td>
    </tr>
    <tr>
        <td>first_name</td>
        <td>string</td>
        <td><strong>Optional.</strong> First Name</td>
    </tr>
    <tr>
        <td>last_name</td>
        <td>string</td>
        <td><strong>Optional.</strong> Last Name</td>
    </tr>
    <tr>
        <td>language</td>
        <td>string</td>
        <td><strong>Optional.</strong> Communication language. Possible values <code>en</code> - English, <code>fr</code> - French, <code>es</code> - Spanish </td>
    </tr>
    <tr>
        <td>gender</td>
        <td>string</td>
        <td><strong>Optional.</strong> Possible values <code>male</code>, <code>female</code> </td>
    </tr>
    <tr>
        <td>enabled</td>
        <td>boolean</td>
        <td><strong>Optional.</strong> Possible values <code>true</code>, <code>false</code> </td>
    </tr>
</table>

Example
```
PUT /customers/12e69610400894b2b02089e01cf89b5 HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSU...
X-Application-Key: eyXai0XD7SLLzaOeJW...
Accept: application/vnd.kangaroorewards.api.v1+json;
Content-Type: application/json

{ "email" : "johndoe@example.com", "phone": "5140000001", "first_name": "John", "last_name": "Doe" }
```

Respone Body
```
{
    "data": {
        "id": "11e69610410894b2bb02089e01cf89b5",
        "email": "johndoe@example.com",
        "phone": "5140000001",
        "first_name": "John",
        "last_name": "Doe"
    }
}

```

Activate or deactivate a customer

```
PUT /customers/12e69610400894b2b02089e01cf89b5
{
  "enabled": true
}
```

```
PUT /customers/12e69610400894b2b02089e01cf89b5
{
  "enabled": false
}
```

+ Parameters
    + id: `11e696103f8ff5eabb02089e01cf89b5` - The unique ID of the customer.

+ Request (application/json)
    + Headers

            Authorization: Bearer <access_token>
            X-Application-Key: eyXai0XD7SLLzaOeJW
            Accept: application/vnd.kangaroorewards.api.v1+json;

    + Attributes (Customer Create)

+ Response 200 (application/json)
    + Attributes
        - data (Customer)

+ Response 400 (application/json)
    + Attributes (Error 400)

+ Response 404 (application/json)
    + Attributes (Error 404)

+ Response 422 (application/json)
    + Attributes (Error 422)

## Customer Resource [/customers/{id}{?}]

### Delete a customer [DELETE]

> **NOTE:** Not implemented yet. Coming soon.

Deletes the customer with the requested id.

+ Request (application/json)
    + Headers

            Authorization: Bearer <access_token>
            X-Application-Key: eyXai0XD7SLLzaOeJW
            Accept: application/vnd.kangaroorewards.api.v1+json;

+ Parameters
    + id: `11e696103f8ff5eabb02089e01cf89b5` - The unique ID of the customer.

+ Response 204 (application/json)

# Data Structures

## Customer (object)

+ id: `11e696103f8ff5eabb02089e01cf89b5` (string)
+ first_name: `Battery` (string) - First name for the Customer.
+ last_name: `Harris` (string) - Last name for the Customer.
+ email: `johndoe@example.com` (string)
+ phone: `5141234567` (string)
+ birth_date: `1963-03-28` (string) - Date of birth
+ gender: `male` (string) - Customer's gender. Can be male or female
+ balance
    + points: 135 (number)
    + giftcard: 21.35 (number)

## Customer Create (object)

+ first_name: `John` (string)
+ last_name: `Doe` (string)
+ email: `johndoe@example.com` (string, required)
+ birth_date: `1963-03-28` (string) - Date of birth
+ language: `en` (string) - Communication language. Possible values `en` - English, `fr` - French, `es` - Spanish
+ gender: `male` (string) - Customer's gender. Can be male or female

## Error 400 (object)

+ code: `400` (number)
+ error: `Bad Request` (string)
+ message: `Invalid ID supplied` (string)

## Error 404 (object)

+ code: `404` (number)
+ error: `Not found` (string)
+ message: `Customer not found` (string)

## Error 422 (object)

+ email (array)
    + `The email field is required` (string)
+ phone (array)
    + `The phone field is required` (string)


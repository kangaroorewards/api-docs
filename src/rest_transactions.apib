# Transactions

# Group Transactions

## Transaction [/transactions{?page}]

### List all transactions [GET]

Returns a list of transactions

**Query Parameters**

|Name|Type|Description|
|-----|----|-----------|
|page|integer|`Optional.` Provide this to retrieve the next set of results for your original query. Default value page=1|
|relationships|enum|`Optional.` You can optionally request that the response include the customer object. To do so, specify relationships=customer in your request.|
|created_at|string|`Optional.` Filter by created date. [See Filtering](#filtering)|
|updated_at|string|`Optional.` Filter by updated date. [See Filtering](#filtering)|

Examples
```
GET /transactions HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6ImFmODNk
X-Application-Key: eyXai0XD7SLLzaOeJW
Accept: application/vnd.kangaroorewards.api.v1+json;
Content-Type: application/json
```

Response Body
```
{
    "data": [
        {
            "id": 1991625373,
            "amount": 0,
            "points": 100,
            "name": "Redemption",
            "created_at": "2017-10-06T15:55:06+00:00",
            "updated_at": "2017-10-06T15:55:06+00:00"
        },
        {
            "id": 599112524,
            "amount": 5,
            "points": 50,
            "name": "Reward",
            "created_at": "2017-03-24T22:13:15+00:00",
            "updated_at": "2017-03-24T22:13:15+00:00"
        }
        ...
    ],
    "cursor": {
        "count": 30,
        "next": 2,
        "next_uri": "transactions?page=2"
    },
    "meta": {
        "total": 30
    }
}
```

**Relationships**

> **NOTE:** You could also request more information using relationship parameter. All possible values:
> - **customer** - includes customer object in the response
> - **purchase.receipt** - includes receipt related to transaction
> - **transaction_sequences** - includes related transactions

The value of the relationships parameter MUST be a comma-separated (",") list of relationship names.

Example
```
GET /transactions?relationships=customer HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLC
Accept: application/vnd.kangaroorewards.api.v1+json;
X-Application-Key: eyXai0XD7SLLzaOeJW
Content-Type: application/json
```

Response Body
```
{
    "data": [
        {
            "id": 1991625373,
            "amount": 0,
            "points": 100,
            "name": "Redemption",
            "created_at": "2017-10-06T15:55:06+00:00",
            "updated_at": "2017-10-06T15:55:06+00:00",
            "customer": {
                "id": "11e7aa159d83fae9bf8d000c296d46ef",
                "email": "john@example.com",
                "phone": null,
                "first_name": "John",
                "last_name": "Doe",
                "created_at": "2017-10-05T21:39:07+00:00",
                "updated_at": "2017-10-05T21:39:09+00:00"
            }
        },
        ...
    ],
    "cursor": {
        "count": 30,
        "next": 2,
        "next_uri": "transactions?page=2"
    },
    "meta": {
        "total": 30
    }
}
```

Example with transaction_sequences
```
GET /transactions?relationships=transaction_sequences HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLC
Accept: application/vnd.kangaroorewards.api.v1+json;
X-Application-Key: eyXai0XD7SLLzaOeJW
Content-Type: application/json
```

```
{
    "id": 1892256,
    "amount": 0.1,
    "points": 0,
    "name": "Store Credit",
    "created_at": "2020-01-16T21:53:01+00:00",
    "updated_at": "2020-01-16T21:53:01+00:00",
    "transaction_sequences": [
        {
            "id": 26112,
            "initial_transaction_id": 1892256,
            "next_transaction_id": 1892257,
            "next_transaction": {
                "id": 1892257,
                "amount": 10,
                "points": 10,
                "name": "Reward",
                "created_at": "2020-01-16T21:53:01+00:00",
                "updated_at": "2020-01-16T21:53:01+00:00"
            }
        }
    ]
},
```

<a name="filtering"></a>

**Filtering**

When submitting a GET request, you can ask it to return only transactions that meet specific criteria.
To filter transactions, in the query string, specify one or more fields with an operator, followed by a separator (`|`)
and the values for the following:

Fields:
- `created_at` - Filter by created date
- `updated_at` - Filter by updated date

Operators:
- `gt` - Greater Than
- `gte` - Greater Than or Equal
- `lt` - Less Than
- `lte` - Less Than or Equal

Filter Syntax

A single filter uses the form: `field=operator|VALUE`

Each URL query parameter **must be URL encoded**.

Example:
Retrieve all transactions that have created date greather than 2017-01-27T14:37:16+0000

`GET /transactions?created_at=gt%7C2017-01-27T14%3A37%3A16%2B0000`


**Transaction Types**

<table><tbody><tr><td><div class="td_head">name</div></td><td><div class="td_head">id</div></td></tr><tr><td class="td_row_even"><div class="td_row_even">Offer Claimed</div></td><td class="td_row_even"><div class="td_row_even">2</div></td></tr><tr><td class="td_row_odd"><div class="td_row_odd">Reward</div></td><td class="td_row_odd"><div class="td_row_odd">4</div></td></tr><tr><td class="td_row_even"><div class="td_row_even">Redemption</div></td><td class="td_row_even"><div class="td_row_even">5</div></td></tr><tr><td class="td_row_odd"><div class="td_row_odd">Offer Shared on FB</div></td><td class="td_row_odd"><div class="td_row_odd">15</div></td></tr><tr><td class="td_row_even"><div class="td_row_even">Offer Shared on TW</div></td><td class="td_row_even"><div class="td_row_even">16</div></td></tr><tr><td class="td_row_odd"><div class="td_row_odd">Signup Bonus</div></td><td class="td_row_odd"><div class="td_row_odd">33</div></td></tr><tr><td class="td_row_even"><div class="td_row_even">Offer Shared on FB</div></td><td class="td_row_even"><div class="td_row_even">37</div></td></tr><tr><td class="td_row_odd"><div class="td_row_odd">Offer Shared on TW</div></td><td class="td_row_odd"><div class="td_row_odd">38</div></td></tr><tr><td class="td_row_even"><div class="td_row_even">Offer Shared on FB</div></td><td class="td_row_even"><div class="td_row_even">41</div></td></tr><tr><td class="td_row_odd"><div class="td_row_odd">Offer Shared on TW</div></td><td class="td_row_odd"><div class="td_row_odd">42</div></td></tr><tr><td class="td_row_even"><div class="td_row_even">Redemption - Catalog</div></td><td class="td_row_even"><div class="td_row_even">43</div></td></tr><tr><td class="td_row_odd"><div class="td_row_odd">Transaction Canceled -  Clerk</div></td><td class="td_row_odd"><div class="td_row_odd">44</div></td></tr><tr><td class="td_row_even"><div class="td_row_even">Offer Canceled -  Clerk</div></td><td class="td_row_even"><div class="td_row_even">45</div></td></tr><tr><td class="td_row_odd"><div class="td_row_odd">Giftcard Shared on FB</div></td><td class="td_row_odd"><div class="td_row_odd">52</div></td></tr><tr><td class="td_row_even"><div class="td_row_even">Giftcard Shared on TW</div></td><td class="td_row_even"><div class="td_row_even">53</div></td></tr><tr><td class="td_row_odd"><div class="td_row_odd">Giftcard Purchased - Points</div></td><td class="td_row_odd"><div class="td_row_odd">55</div></td></tr><tr><td class="td_row_even"><div class="td_row_even">Giftcard Refunded - PayPal</div></td><td class="td_row_even"><div class="td_row_even">56</div></td></tr><tr><td class="td_row_odd"><div class="td_row_odd">Points Transfer - Sender</div></td><td class="td_row_odd"><div class="td_row_odd">58</div></td></tr><tr><td class="td_row_even"><div class="td_row_even">Points Transfer - Receiver</div></td><td class="td_row_even"><div class="td_row_even">59</div></td></tr><tr><td class="td_row_odd"><div class="td_row_odd">Redemption on behalf of Client - Custom</div></td><td class="td_row_odd"><div class="td_row_odd">62</div></td></tr><tr><td class="td_row_even"><div class="td_row_even">Redemption on behalf of Client - Catalog</div></td><td class="td_row_even"><div class="td_row_even">63</div></td></tr><tr><td class="td_row_odd"><div class="td_row_odd">Refund - Points</div></td><td class="td_row_odd"><div class="td_row_odd">64</div></td></tr><tr><td class="td_row_even"><div class="td_row_even">AutoClaim - Points</div></td><td class="td_row_even"><div class="td_row_even">67</div></td></tr><tr><td class="td_row_odd"><div class="td_row_odd">MultiAutoClaim - Points</div></td><td class="td_row_odd"><div class="td_row_odd">68</div></td></tr><tr><td class="td_row_even"><div class="td_row_even">Follow-My-Store Bonus</div></td><td class="td_row_even"><div class="td_row_even">69</div></td></tr><tr><td class="td_row_odd"><div class="td_row_odd">Giftcard Purchase - At Store</div></td><td class="td_row_odd"><div class="td_row_odd">70</div></td></tr><tr><td class="td_row_even"><div class="td_row_even">Coupon Tagged</div></td><td class="td_row_even"><div class="td_row_even">74</div></td></tr><tr><td class="td_row_odd"><div class="td_row_odd">Coupon claimed</div></td><td class="td_row_odd"><div class="td_row_odd">75</div></td></tr><tr><td class="td_row_even"><div class="td_row_even">Referred rewarded</div></td><td class="td_row_even"><div class="td_row_even">76</div></td></tr><tr><td class="td_row_odd"><div class="td_row_odd">Referrer rewarded</div></td><td class="td_row_odd"><div class="td_row_odd">77</div></td></tr><tr><td class="td_row_even"><div class="td_row_even">Adjust Increase Points</div></td><td class="td_row_even"><div class="td_row_even">80</div></td></tr><tr><td class="td_row_odd"><div class="td_row_odd">Adjust Decrease Points</div></td><td class="td_row_odd"><div class="td_row_odd">82</div></td></tr><tr><td class="td_row_even"><div class="td_row_even">Giftcard Purchased - Amount</div></td><td class="td_row_even"><div class="td_row_even">84</div></td></tr><tr><td class="td_row_odd"><div class="td_row_odd">Giftcard Purchase - At Store</div></td><td class="td_row_odd"><div class="td_row_odd">85</div></td></tr><tr><td class="td_row_even"><div class="td_row_even">Amount Transfer - Sender</div></td><td class="td_row_even"><div class="td_row_even">86</div></td></tr><tr><td class="td_row_odd"><div class="td_row_odd">Amount Transfer - Receiver</div></td><td class="td_row_odd"><div class="td_row_odd">87</div></td></tr><tr><td class="td_row_even"><div class="td_row_even">Giftcard Payment</div></td><td class="td_row_even"><div class="td_row_even">88</div></td></tr><tr><td class="td_row_odd"><div class="td_row_odd">Convertible Coupon created</div></td><td class="td_row_odd"><div class="td_row_odd">91</div></td></tr><tr><td class="td_row_even"><div class="td_row_even">Convertible Coupon redeemed</div></td><td class="td_row_even"><div class="td_row_even">92</div></td></tr><tr><td class="td_row_odd"><div class="td_row_odd">Cash-back</div></td><td class="td_row_odd"><div class="td_row_odd">102</div></td></tr><tr><td class="td_row_even"><div class="td_row_even">Refund Cash-back</div></td><td class="td_row_even"><div class="td_row_even">103</div></td></tr><tr><td class="td_row_odd"><div class="td_row_odd">Refund - Redeemed Points</div></td><td class="td_row_odd"><div class="td_row_odd">107</div></td></tr></tbody></table>


+ Request (application/json)

    + Headers

            Authorization: Bearer <access_token>
            X-Application-Key: <X-Application-Key>
            Accept: application/vnd.kangaroorewards.api.v1+json;

+ Response 200 (application/json)
    + Attributes
        - data (array[Reward Response])

## Transaction [/transactions]

### Create a transaction [POST]

A Transaction is a single event where a customer earns or spends points.

You can create a transaction in one of two ways: by Customer ID or customer's email address/phone number.
If that customer exists, we'll simply add that Transaction for that customer.  If the customer doesn't exist,
we'll create a new customer, award the Transaction, and then send the customer a welcome email/SMS.

In addition, you can retrieve a specific transaction or a list of transactions.

Use `/transactions` resource to create a **reward**, **redeem** or **return** transaction.

A `reward` transaction will increase the balance for the customer based on the amount included in the JSON request body.
To create a reward transaction, set the amount, points, or visits. Use `visits` when "Claim Points" option is active.

Include `product_rewards` object when you want to apply "À La Carte Rewards" (Product Rewards) for `reward` transaction only.

The total points earned is calculated based on the current Earning Rule value configured in Business Portal.
If there are offers to apply, ex. Points Multiplier than it will automatically multiply the points and update the customer's balance.

A `redeem` transaction will decrease the balance for the customer based on the amount included.
To create a redeem transaction, set the amount or points.

Include `catalog_items` object when you want to redeem a "Redemption Catalog" item for `redeem` transaction only.

The `customer` object is required for all transaction types, but only id, email or phone field is required.

The `employee.pin_code` is required only when redeeming on behalf of the customer or when the rule: "*Employee must enter his ID when Purchase Amount exceeds ...*" is active

*Body parameters*
|Name|Type|Description|
|-----|----|-----------|
|intent|string|Set the `intent` to: `reward`, `redeem`, `return`, `get_coupon`, `claim_coupon`, `purchase_giftcard_prepaid`, `giftcard_payment`, `adjust_points_balance`|
|amount|number|Required if none of `points`, *visits* are present|
|points|number|Required if none of `amount`, *visits* are present|
|visits|number|Required if none of `amount`, *points* are present|
|customer|object|Required. The customer object and at least `id`, `email` or `phone` must be provided|
|customer.id|string|Required if none of `customer.email`, `customer.phone` are present|
|customer.email|string|Required if none of `customer.id`, `customer.phone` are present|
|customer.phone|string|Required if none of `customer.id`, `customer.email` are present|
|customer.country_code|string|Required when `customer.phone` is present|
|employee|object|Optional. The employee object that will be attached to the transaction|
|employee.id|string|Optional. If provided, the Employee will be attached to the transaction|
|employee.pin_code|number|Optional. Required only if the rule: "*Employee must enter his ID when Purchase Amount exceeds ...*" is active. It will override the employee.id|
|branch|object|Optional. To set the physical location where the transaction took place. By default it will be the main branch|
|branch.id|string|Optional. The branch ID where the transaction took place|
|catalog_items|object|Optional. The Catalog Item to be redeemed|
|catalog_items.id|number|Required with Catalog Item. The Catalog Item ID|
|product_rewards|object|Optional. The Product Rewards|
|product_rewards.id|number|Required with product_reward. The Product Reward ID|
|product_rewards.quantity|number|Required with product_reward. Quantity|
|receipt|object|Optional. The receipt object that will be attached to the transaction|
|receipt.number|string|Optional. If provided, the receipt number will be attached to the transaction|
|offer|object|Optional. Required when intent is `get_coupon` or `claim_coupon`. The Offer to assign a coupon or when redeeming a coupon|
|offer.id|number|Required with Offer. The Offer ID|
|coupon|object|Optional. Required when intent is `claim_coupon`. The coupon to be redeemed (claimed)|
|coupon.id|number|Required with coupon. The Coupon ID|

 <!-- `purchase_giftcard`, `send_giftcard` or `adjust_balance` -->

>**Note:**
>Transaction intent is required and must be one of the following: 
>- `reward` - Reward points or amount. When using amount, it will be converted to points based on the reward rules
>- `redeem` - Redeem points, amount or catalog item
>- `return` - Return points
>- `get_coupon` - When the customers wants to get a coupon
>- `claim_coupon` - When the customer wants to claim (redeem) a coupon
>- `purchase_giftcard_prepaid` - Purchase a gift card in store. It will create a "Giftcard Purchase - At Store" transaction and gift card balance will be increased
>- `giftcard_payment`- Pay with gift card balance. It will create a "Giftcard Payment" transaction and the gift card balance will be depleted
>- `reward_store_credit` - Award Store Credit to customers. It will increase gift card balance
>- `adjust_points_balance` - Adjust points balance. Points value can be positive (increase balance) or negative (decrease balance)
>- `reward_referral` - Reward referee and referrer based referral program conditions

>**Note:**
>One of the following attributes is required `amount`, `points` or `visits` when intent is one of the following: `reward`, `redeem`, `return`

>**Note:**
>To apply visits aggregation set `visits` value greater than 1. The Employee PIN code is also required.

>**Note:**
>Customer object is required and at least `id`, `email` or `phone` is required
>country_code is required when phone number is used

Example reward amount and a customer with ID

```
POST /transactions HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLC
X-Application-Key: eyXai0XD7SLLzaOeJW
Accept: application/vnd.kangaroorewards.api.v1+json;
Content-Type: application/json

{
    "intent": "reward",
    "amount": 5.25,
    "customer": {
        "id": "11e696103f8ff5eabb02089e01cf89b5"
    }
}
```

Response Body
```
{
    "data": {
        "id": 256560,
        "created_at": "2017-03-06T20:19:24+0000",
        "amount": 5.25,
        "points": 5,
        "name": "Reward"
    }
}
```

Example reward points and a customer with email address

```
POST /transactions HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLC
X-Application-Key: eyXai0XD7SLLzaOeJW
Accept: application/vnd.kangaroorewards.api.v1+json;
Content-Type: application/json

{
    "intent": "reward",
    "points": 100,
    "customer": {
        "email": "john@example.com"
    }
}
```

>**Note:**
>When `employee.pin_code` is supplied, the Employee that has that Pin Code will override the Employee attached to the transaction

Example with Employee PIN Code required and Product Rewards
```
POST /transactions HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLC
X-Application-Key: eyXai0XD7SLLzaOeJW
Accept: application/vnd.kangaroorewards.api.v1+json;
Content-Type: application/json

{
    "intent": "reward",
    "amount": 3,
    "customer": {
        "phone": "6043345025"
    },
    "employee":{
        "pin_code": "3333"
    },
    "product_rewards": [
        {
          "id": 123,
          "quantity": 3
        },
        {
          "id": 124,
          "quantity": 1
        }
    ]
}
```

Response Body with relations
```
{
    "data": {
        "id": 256775,
        "created_at": "2017-03-08T21:15:54+0000",
        "amount": 3,
        "points": 3,
        "name": "Reward",
        "offers": [
            {
                "id": 558,
                "points": 0,
                "expires_at": "2017-04-01T03:59:59+0000",
                "discount_value": 0,
                "multip_factor": 0,
                "real_value": 25,
                "type": "free_product",
                "title": "Free product",
                "description": "Free product"
            }
        ],
        "customer": {
            "id": "11e6fd0b9882cd0d84a5089e01cf89b5",
            "email": "",
            "phone": "6043345025",
            "first_name": "John",
            "last_name": "Doe",
            "member_since": "2017-03-08T21:15:54+0000",
            "balance": {
                "points": 259,
                "amount": 2.59
            }
        }
    }
}
```


>**Note:**
>You could pass the `branch.id` - wich will define where the transaction took place.

Example with Branch ID
```
POST /transactions HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLC
X-Application-Key: eyXai0XD7SLLzaOeJW
Accept: application/vnd.kangaroorewards.api.v1+json;
Content-Type: application/json

{
    "intent": "reward",
    "amount": 3,
    "customer": {
        "id": "11e696103f8ff5eabb02089e01cf89b5"
    },
    "branch":{
        "id": "11e7038ade3780aca64e089e01cf89b5"
    }
}
```

>**Note:**
>To attach an Employee to the transaction, you must set the `employee.id` in the payload

Example with Employee ID
```
POST /transactions HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLC
X-Application-Key: eyXai0XD7SLLzaOeJW
Accept: application/vnd.kangaroorewards.api.v1+json;
Content-Type: application/json

{
    "intent": "reward",
    "amount": 3,
    "customer": {
        "id": "31e692103f8ef5eabd02089e01cf89b4"
    },
    "branch":{
        "id": "11e696101aab59a4bb02089e01cf89b5"
    },
    "employee":{
        "id": "21e3038a5e3780aca24e089e01cf84b2"
    }
}
```

Example with Receipt Number
```
POST /transactions HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLC
X-Application-Key: eyXai0XD7SLLzaOeJW
Accept: application/vnd.kangaroorewards.api.v1+json;
Content-Type: application/json

{
    "intent": "reward",
    "points": 100,
    "customer": {
        "id": "11e8bb6776ea7699b48e089e01cf89b5"
    },
    "receipt": {
        "number": "12345678"
    }
}
```

Example Redeem a Catalog Item
```
POST /transactions HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLC
X-Application-Key: eyXai0XD7SLLzaOeJW
Accept: application/vnd.kangaroorewards.api.v1+json;
Content-Type: application/json

{
    "intent": "redeem",
    "customer": {
        "id": "11e6fd0b9882cd0d84a5089e01cf89b5",
        "pin_code": 1111
    },
    "catalog_items": [
        {
            "id": 123,
            "quantity": 1
        }
    ]
}
```

Example redeem with Employee's PIN Code
```
POST /transactions HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLC
X-Application-Key: eyXai0XD7SLLzaOeJW
Accept: application/vnd.kangaroorewards.api.v1+json;
Content-Type: application/json

{
    "intent": "redeem",
    "points": 10,
    "customer": {
        "id": "11e6fd0b9882cd1d84a5089e01cf89b"
    },
    "employee":{
        "pin_code": "1111"
    }
}
```

Example Return Amount
```
POST /transactions HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLC
X-Application-Key: eyXai0XD7SLLzaOeJW
Accept: application/vnd.kangaroorewards.api.v1+json;
Content-Type: application/json

{
    "intent": "return",
    "amount": 2.25,
    "customer": {
        "id": "11e6fd0b9882cd0d84a5089e01cf89b5",
        "pin_code": 1111
    }
}
```

Example assign a coupon to customer (Get coupon)

>Note: Only offers with type_id 8, 9, 10 are coupons and can be assigned to a customer 

```
POST /transactions HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLC
X-Application-Key: eyXai0XD7SLLzaOeJW
Accept: application/vnd.kangaroorewards.api.v1+json;
Content-Type: application/json

{
    "intent": "get_coupon",
    "customer": {
        "id": "11e696103f8ff5eabb02089e01cf89b5"
    },
    "offer": {
        "id": 1234
    }
}
```

Response Body
```
{
    "data": {
        "id": 1892267,
        "amount": 0,
        "points": 0,
        "name": "Coupon Tagged",
        "created_at": "2019-10-04T16:07:33+00:00",
        "updated_at": "2019-10-04T16:07:33+00:00",
        "offers": [...],
        "coupon": {
            "id": 512572,
            "qrcode": "12428967",
            "coupon_locked": false,
            "coupon_type_id": 74,
            "expires_at": "2019-10-14T16:07:33+00:00",
            "offer": {...}
        }
    }       
}
```

Example claim a coupon (redeem)
```
POST /transactions HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLC
X-Application-Key: eyXai0XD7SLLzaOeJW
Accept: application/vnd.kangaroorewards.api.v1+json;
Content-Type: application/json

{
    "intent": "claim_coupon",
    "customer": {
        "id": "11e696103f8ff5eabb02089e01cf89b5"
    },
    "offer": {
        "id": 1234
    },
    "coupon": {
        "id": 512572
    }
}
```


Example purchase gift card prepaid (In store)
```
POST /transactions HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLC
X-Application-Key: eyXai0XD7SLLzaOeJW
Accept: application/vnd.kangaroorewards.api.v1+json;
Content-Type: application/json

{
    "intent": "purchase_giftcard_prepaid",
    "customer": {
        "id": "11e696103f8ff5eabb02089e01cf89b5"
    },
    "amount": 10
}
```

Example purchase gift card prepaid (In store)
```
POST /transactions HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLC
X-Application-Key: eyXai0XD7SLLzaOeJW
Accept: application/vnd.kangaroorewards.api.v1+json;
Content-Type: application/json

{
    "intent": "purchase_giftcard_prepaid",
    "customer": {
        "email": "john@example.com"
    },
    "amount": 10
}
```

Example Pay with gift card balance
```
POST /transactions HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLC
X-Application-Key: eyXai0XD7SLLzaOeJW
Accept: application/vnd.kangaroorewards.api.v1+json;
Content-Type: application/json

{
    "intent": "giftcard_payment",
    "customer": {
        "id": "11e696103f8ff5eabb02089e01cf89b5"
    },
    "amount": 10
}
```

Example award Store Credit to customer
```
POST /transactions HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLC
X-Application-Key: eyXai0XD7SLLzaOeJW
Accept: application/vnd.kangaroorewards.api.v1+json;
Content-Type: application/json

{
    "intent": "reward_store_credit",
    "customer": {
        "id": "11e8bb6776ea7699b48e089e01cf89b5"
    },
    "amount": 100
}

```

Example: Adjust(increase) points balance and a customer with ID

```
POST /transactions HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLC
X-Application-Key: eyXai0XD7SLLzaOeJW
Accept: application/vnd.kangaroorewards.api.v1+json;
Content-Type: application/json

{
    "intent": "adjust_points_balance",
    "points": 100,
    "comments": "Add optional comments",
    "customer": {
        "id": "11e696103f8ff5eabb02089e01cf89b5"
    }
}
```

Example: Adjust(decrease) points balance and a customer with ID

```
POST /transactions HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLC
X-Application-Key: eyXai0XD7SLLzaOeJW
Accept: application/vnd.kangaroorewards.api.v1+json;
Content-Type: application/json

{
    "intent": "adjust_points_balance",
    "points": -50,
    "customer": {
        "id": "11e696103f8ff5eabb02089e01cf89b5"
    }
}
```

Example: Reward referral request

```
POST /transactions HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLC...
X-Application-Key: eyXai0XD7SLLzaOeJW...
Accept: application/vnd.kangaroorewards.api.v1+json;
Content-Type: application/json

{
    "intent": "reward_referral",
    "amount": 40.99,
    "customer": {
      "id": "11eaa697ae8f46bd9df9b42e99312ac8"
    }
}
```

> Note: The response might return status 202 without a created transaction resource
> When reponse status code is 202 there won't be a data object with a transaction resource because 
> the referral condition not met
>
> It might also return a 404 error if the referral record not found for customer or no active 
> referral program exists


Example: Refund redeemed points

```
POST /transactions HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLC...
X-Application-Key: eyXai0XD7SLLzaOeJW...
Accept: application/vnd.kangaroorewards.api.v1+json;
Content-Type: application/json

{
    "intent": "refund_redeemed_points",
    "points": 100,
    "customer": {
        "id": "11eab58b792394f48b7fb42e99312ac8"
    }
}
```

> Note: This transaction will increase the points balance
> Also, it will not affect the tier level


+ Request
    + Headers

            Authorization: Bearer <access_token>
            X-Application-Key: <X-Application-Key>
            Accept: application/vnd.kangaroorewards.api.v1+json
            Content-Type: application/json

    + Attributes (Reward Amount Create)

+ Response 200 (application/json)
    + Attributes
        - data (Reward Response)

+ Response 400 (application/json)
    + Attributes (Transactions Error 400)

+ Response 404 (application/json)
    + Attributes (Transactions Error 404)

+ Response 422 (application/json)
    + Attributes (Transactions Error 422)

+ Request
    + Headers

            Authorization: Bearer <access_token>
            X-Application-Key: <X-Application-Key>
            Accept: application/vnd.kangaroorewards.api.v1+json
            Content-Type: application/json

    + Attributes (Reward With Products Create)

+ Response 200 (application/json)
    + Attributes
        - data (Reward Response With Customer)

## Transaction Resource [/transactions/{id}{?}]

### Cancel a transaction [DELETE]

You can cancel a transaction any time.
When canceling a transaction, the points will be depleted from the customer's balance
When cancelling a points multiplier transaction, the parent transaction will also be cancelled

> **NOTE:** Only transaction type_id: 2, 4 can be cancelled
> 
> The customer must have enough points balance

+ Request (application/json)
    + Headers

            Authorization: Bearer <access_token>
            X-Application-Key: eyXai0XD7SLLzaOeJW
            Accept: application/vnd.kangaroorewards.api.v1+json;

+ Parameters
    + id: 123 (required, number) - The unique ID of the transaction.

+ Response 204 (application/json)

+ Response 400 (application/json)
    + Attributes (Transactions Error 400)

+ Response 403 (application/json)
    + Attributes (Transactions Error 403)

# Data Structures

## Reward Amount Create(object)

+ intent: `reward` (string)
+ amount: `5.25` (number)
+ customer
    + id: `11e696103f8ff5eabb02089e01cf89b5` (string)

## Reward With Products Create(object)

+ intent: `reward` (string)
+ amount: `5.25` (number)
+ customer
    + email: `john@example.com` (string)
+ product_rewards (array)
    + (object)
        * id: 123 (number)
        * quantity: 3 (number)
    + (object)
        * id: 124 (number)
        * quantity: 1 (number)

## Reward Response (object)

+ id: `256559` (number)
+ amount: `5.25` (number)
+ points: `5` (number)
+ name: `Reward` (string)
+ created_at: `2017-03-06T19:45:47+0000` (string)
+ updated_at: `2017-03-06T19:45:47+0000` (string)

## Reward Response With Customer (object)

+ id: `256559` (number)
+ amount: `5.25` (number)
+ points: `5` (number)
+ name: `Reward` (string)
+ created_at: `2017-03-06T19:45:47+0000` (string)
+ customer (object)
    + id: `11e6fd0b9882cd0d84a5089e01cf89b5` (string)
    + email: john@example.com (string)
    + balance (object)
        + points: 259 (number)
        + amount: 2.59 (number)

## Transactions Error 422 (object)

+ customer.id (array)
    + `The selected customer.id is invalid.` (string)

## Transactions Error 400 (object)

+ error (object)
    + status_code: 400 (number)
    + message: Bad Request (string)
    + description: Invalid Employee ID (string)
    + link: https://api.kangaroorewards.local/docs (string)


## Transactions Error 403 (object)

+ message: `This action is unauthorized.` (string)

## Transactions Error 404 (object)

+ error (object)
    + status_code: 404 (number)
    + message: Not found (string)
    + description: Referral not found for customer (string)


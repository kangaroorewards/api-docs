
# Business Rules

# Group Business Rules

## Business Rules [/rules]

### Retrieve Business Rules [GET]

Retrieving existing business rules.

Example

```
GET /rules HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLC
X-Application-Key: eyXai0XD7SLLzaOeJW
Accept: application/vnd.kangaroorewards.api.v1+json;
Content-Type: application/json
```

Response Body
```
{
  "data": {
    "earning": {
      "reward_ratio": 100,
      "reward_amount": 1,
      "reward_points": 100,
      "reward_milestone_amount": 1,
      "welcome_points": 100
    },
    "redeeming": {
      "redemption_ratio": 2,
      "redemption_amount": 1
    },
    "currency": null
  }
}
```

+ Request
    + Headers

            Authorization: Bearer <access_token>
            X-Application-Key: eyXai0XD7SLLzaOeJW
            Accept: application/vnd.kangaroorewards.api.v1+json;

+ Response 200 (application/json)
    + Attributes
        - data (Business Rules Base)


### Update Business Rules [PATCH]

Update business rules.

**Body Parameters**
|Name|Type|Description|
|-----|----|-----------|
|reward_ratio|numeric|`Optional.` The number of points customer will earn for each $1. Positive number. Minimum: 0|
|reward_milestone_amount|numeric|`Optional.` For each $x. Positive number. Minimum: 1|
|redemption_ratio|numeric|`Optional.` Redemption ratio. Only for E-comm |
|redemption_amount|numeric|`Optional.` Redemption amount. Only for E-comm|
|round_up_points|boolean|`Optional.` Round up earning points. The reward points calculation involves taking the floor value of the amount spent divided by the reward milestone amount, then multiplying by the reward ratio to get the reward points. If the round-up earning points feature is enabled, then round up the calculated reward points.|
|tiers_earning_override|boolean|`Optional.` Override earning rules based on Tiers|
|tiers_earning_rules|array|`Optional.`|
|tiers_earning_override.*.id|integer|`Required when tiers_earning_rules is present.` Tier level Id.|
|tiers_earning_override.*.amount|numeric|`Optional.` For each $x. |
|tiers_earning_override.*.points|integer|`Optional.` The number of points customer will earn for $amount|

Example:
```
PATCH /rules HTTP/1.1
Host: api.kangaroorewards.com
Authorization: Bearer eyJ0eXAiOiJKV1QiLC...
Accept: application/vnd.kangaroorewards.api.v1+json;
X-Application-Key: eyXai0XD7SLLzaOeJW...
Content-Type: application/json

{
    "reward_ratio": 100,
    "reward_milestone_amount": 1,
    "redemption_ratio": 20,
    "redemption_amount": 1,
	"round_up_points": true,
	"welcome_points": 100,
	"tiers_earning_override": true,
	"tiers_earning_rules": [
		{
			"id": 78,
			"amount": 1,
			"points": 15
		},
		{
			"id": 79,
			"amount": 1,
			"points": 20
		},
		{
			"id": 475,
			"amount": 1,
			"points": 25
		}
	]
}
```

+ Request (application/json)
    + Headers

            Authorization: Bearer <access_token>
            Accept: application/vnd.kangaroorewards.api.v1+json;
            X-Application-Key: <your_application_key>

    + Attributes (UpdateBusinessRulesData)

+ Response 200 (application/json)
    + Attributes
        - data (Business Rules Base)

+ Response 422 (application/json)
    + Attributes (UpdateBusinessRulesError 422)

+ Response 403 (application/json)
    + Attributes (UpdateBusinessRulesError 403)

+ Response 400 (application/json)
    + Attributes (UpdateBusinessRulesError 400)


# Data Structures

## Business Rules Base (object)

+ earning (object)
    + reward_ratio: 10 (number) - The number of points customer will earn for each $1
    + reward_milestone_amount: 1 (number) - For each $1
    + reward_points: 100 (number) - ALIAS
    + reward_amount: 1 (number) - ALIAS 
    + welcome_points: 100 (number) - Number of welcome points
    + round_up_points: true (boolean) - Round up earning points.
    + tiers_earning_override: true (boolean) - Override earning rules based on Tiers.
    + tiers_earning_rules (array) - Earning rules based on Tiers.
        + (object)
            + id: 78 (number)
            + amount: 1 (number)
            + points: 15 (number)
+ redeeming (object)    
    + redemption_ratio: 2 (number) - Redemption ratio. Only for E-comm
    + redemption_amount: 1 (number) - Redemption amount. Only for E-comm

## UpdateBusinessRulesData (object)

+ reward_ratio: 10 (number) - The number of points customer will earn for each $1
+ reward_milestone_amount: 1 (number) - For each $1
+ redemption_ratio: 2 (number) - Redemption ratio. Only for E-comm
+ redemption_amount: 1 (number) - Redemption amount. Only for E-comm

## UpdateBusinessRulesError 403 (object)

+ message: `This action is unauthorized.` (string)

## UpdateBusinessRulesError 400 (object)

+ error (object)
    - status_code: 400 (number)
    - message: `Bad Request` (string)
    - description: `Expiration date cannot be prior to publish date.` (string)

## UpdateBusinessRulesError 422 (object)

+ reward_milestone_amount (array)
    + `The reward milestone amount must be at least 1.` (string)

